{"version":3,"sources":["Components/Visualisations/LineGraph/LineGraph.module.css","Components/Selector/ExitEntrySelector/ExitEntrySelector.module.css","Containers/LineGraphContainer/LineGraphContainer.module.css","hoc/ContainerLayout/ContainerLayout.module.css","Components/TextWrapper/TextWrapper.module.css","Components/Visualisations/VizWrapper/VizWrapper.module.css","Components/Selector/Selector.module.css","Components/Visualisations/ChordDiagram/ChordDiagram.module.css","Components/TimeSlider/TimeSlider.module.css","hoc/Layout/Layout.module.css","hoc/ContainerLayout/ContainerLayout.js","Components/TextWrapper/TextWrapper.js","Components/Visualisations/VizWrapper/VizWrapper.js","Components/Selector/Selector.js","Components/Selector/ExitEntrySelector/ExitEntrySelector.js","Components/Visualisations/LineGraph/LineGraph.js","Containers/LineGraphContainer/LineGraphContainer.js","Components/Visualisations/ChordDiagram/ChordComponents/Arc.js","Components/Visualisations/ChordDiagram/ChordComponents/Ribbon.js","Components/Visualisations/ChordDiagram/ChordDiagram.js","Components/TimeSlider/SliderComponents/SliderComponents.js","Components/TimeSlider/TimeSlider.js","Containers/ChordContainer/ChordContainer.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js","Components/TimeSlider/SliderComponents/SliderComponents.module.css"],"names":["module","exports","props","className","classes","ContainerLayout","children","textWrapper","style","type","Heading","Body","selector","Selector","isClearable","isSearchable","searchable","value","selectorValue","onChange","handler","options","theme","borderRadius","colors","primary25","primary50","primary","exitEntrySelector","checked","exitEntryHandler","Input","lineGraph","defaultValue","data","exitEnterValue","lineChart","width","height","margin","top","right","left","bottom","strokeWidth","stroke","tick","fontSize","dataKey","hide","domain","cursor","content","renderTooltip","fill","activeDot","r","LineGraph","ExitEntrySelector","active","payload","Tooltip","year","parseFloat","toFixed","toString","replace","LineGraphContainer","state","selectedCountry","countries","entry","e","setState","target","exit","this","heading","body","datum","list","lineGraphData","typeOfValue","_","chain","groupBy","filter","obj","map","objs","uniqBy","Year","sumBy","length","TextWrapper","VizWrapper","React","Component","Arc","innerArcPath","outerArcPath","mid","radius","keyAccessor","d","index","start","startAngle","endAngle","enter","timing","duration","delay","ease","easeExpOut","update","nodes","filteredNodes","node","push","key","p1","centroid","p2","text","NAME","split","opacity","onMouseOver","selected","select","_groups","ID","selectAll","onMouseOut","data-tip","data-for","transform","textAnchor","x","dy","points","Ribbon","ribbon","meta","arcIndex","innerRadius","useState","selectedIndex","mouseOver","mouseOverHandler","i","source","id","subindex","prevState","parseInt","ChordDiagram","arcHovered","undefined","arcTooltip","dataTip","name","description","ribbonTooltip","indexName","subindexName","entryValue","exitValue","result","ReactTooltip","rebuild","from","to","fuelData","view","trbl","dataFilteredByYear","arc","outerRadius","concatData","Pos","o","Value","j","forEach","el","datas","u","flatten","sum","chords","chord","padAngle","sortSubgroups","descending","ribbons","chordData","groups","Entry","renderArc","renderRibbon","Math","PI","viewBox","getContent","Handle","handle","percent","getHandleProps","Track","getTrackProps","Tick","count","Ticks","TicksLabel","marginLeft","timeSlider","sliderStyle","position","marginBottom","rootStyle","step","mode","pushParams","values","getRailProps","RailStyle","handles","tracks","ticks","ChordContainer","sliderChange","chordDiagram","TimeSlider","layout","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f997e509.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LineGraph\":\"LineGraph_LineGraph__21meU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"ExitEntrySelector_Selector__3x-XG\",\"Input\":\"ExitEntrySelector_Input__wYQW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LineGraphContainer\":\"LineGraphContainer_LineGraphContainer__C12gm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerLayout\":\"ContainerLayout_ContainerLayout__1P_3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chord\":\"TextWrapper_Chord__38W8V\",\"Line\":\"TextWrapper_Line__FH-lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chord\":\"VizWrapper_Chord__zbJIn\",\"Line\":\"VizWrapper_Line__1UUI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"Selector_Selector__2e-yR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChordDiagram\":\"ChordDiagram_ChordDiagram__b0MMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RailStyle\":\"TimeSlider_RailStyle__3yGlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","import React from 'react';\nimport classes from './ContainerLayout.module.css';\n\nexport default props => (\n\n    <div className={classes.ContainerLayout}>\n        {props.children}\n    </div>\n)","import React from 'react'\nimport classes from './TextWrapper.module.css';\n\nconst textWrapper = props => {\n\n    let style = classes[props.type];\n    return (\n        <div className={style}>\n            {props.Heading}\n            {props.Body}\n        </div>\n    );\n}\n\nexport default textWrapper;","import React from 'react';\nimport classes from './VizWrapper.module.css';\n\nexport default props => (\n    <div className={classes[props.type]}>\n        {props.children}\n    </div>\n)","import React from 'react';\nimport Select from 'react-select';\nimport classes from './Selector.module.css';\n\n\nconst selector = props => {\n    return (\n        <Select \n            className={classes.Selector}\n            isClearable={props.isClearable}\n            // styles={styled}\n            isSearchable={props.searchable}\n            value={props.selectorValue}\n            // backspaceRemovesValue={props.backspace}\n            // defaultValue={props.defaultValue}\n            onChange={props.handler}\n            options={props.options}\n            theme={theme => ({\n                ...theme,\n                borderRadius: 0,\n                colors: {\n                  ...theme.colors,\n                  primary25: '#e3e3e3',\n                  primary50: '#449999',\n                  primary: '#449999',\n                },\n              })}\n        />\n    )\n}\n\nexport default selector;","import React from 'react';\nimport classes from './ExitEntrySelector.module.css';\n\n\nconst exitEntrySelector = props => {\n\n    return (\n        <form className={classes.Selector}>\n            <input type=\"radio\" value=\"entry\" checked={props.value === \"entry\"}\n                onChange={props.exitEntryHandler} /> Entry\n            <input type=\"radio\" value=\"exit\" className={classes.Input} checked={props.value === \"exit\"}\n                onChange={props.exitEntryHandler} /> Exit\n        </form>\n    )\n}\n\nexport default exitEntrySelector;\n","import React from 'react';\nimport { LineChart, YAxis, XAxis, Line, Tooltip  } from 'recharts'\nimport classes from './LineGraph.module.css';\nimport Selector from '../../Selector/Selector';\nimport ExitEntrySelector from '../../Selector/ExitEntrySelector/ExitEntrySelector';\n\nconst lineGraph = props => {\n    const { options, defaultValue, selectorValue, data, exitEnterValue } = props;\n    let lineChart = (\n        <LineChart width={480} height={200} data={data}\n            margin={{top: 10, right: 20, left: 20, bottom: 10}}\n            >\n            <XAxis strokeWidth=\"1px\" stroke={'black'} tick={{fontSize: '11px'}} dataKey={'year'} />\n            <YAxis hide={true}tick={{fontSize: '12px'}} type=\"number\" domain={[0, 'dataMax']} />\n            <Tooltip cursor={{ strokeWidth: 0 }} content={renderTooltip} />\n            <Line type=\"monotone\" dataKey=\"value\" strokeWidth=\"2px\" stroke={'black'} fill=\"mediumspringgreen\" activeDot={{r: 8}}/>\n        </LineChart>\n    )\n\n    return (\n        <div className={classes.LineGraph}>\n            <ExitEntrySelector \n                exitEntryHandler={props.exitEntryHandler}\n                value={exitEnterValue}\n                />\n            <Selector \n                options={options} \n                defaultValue={defaultValue}\n                selectorValue={selectorValue}\n                handler={props.handler}\n            />\n            {lineChart}\n        </div>\n    );\n}\n\nexport default lineGraph;\n\nconst renderTooltip = props => {\n    if ( props.active && props.payload !== null && props.payload[0] !== null ){\n        let payload = props.payload[0].payload;\n        return (\n            <p className={classes.Tooltip}>\n                {payload.year}\n                <br/><span>\n                    Value : {parseFloat(payload.value).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} M USD\n                </span>\n            </p>\n        )\n    }\n}\n","import React from 'react';\nimport classes from './LineGraphContainer.module.css';\nimport ContainerLayout from '../../hoc/ContainerLayout/ContainerLayout';\nimport TextWrapper from '../../Components/TextWrapper/TextWrapper';\nimport VizWrapper from '../../Components/Visualisations/VizWrapper/VizWrapper';\nimport LineGraph from '../../Components/Visualisations/LineGraph/LineGraph';\nimport countries from '../../Data/countries';\nimport _ from 'lodash';\n\nclass LineGraphContainer extends React.Component {\n\n    state = {\n        selectedCountry: countries.entry[0],\n        exitEnterValue: \"entry\"\n    }\n\n    handler = e => {\n        this.setState({ selectedCountry: e })\n    }\n\n    exitEntryHandler = e => {\n        this.setState({ \n            exitEnterValue: e.target.value,\n        })\n        if (e.target.value === 'exit'){\n            this.setState({\n                selectedCountry: countries.exit[0]\n            })\n        }else {\n            this.setState({\n                selectedCountry: countries.entry[0]\n            })\n        }\n    }\n\n    render() {\n        const { data } = this.props;\n        let countryList = [];\n        let heading = <h1>Gas Trade<br/>Flow</h1>,\n        body = <p>The Gas Trade Flow shows the flow of gas transacations within Europe.</p>\n        let datum = [ ...data ];\n\n        let list = countries.entry;\n        if (this.state.exitEnterValue === \"exit\") list = countries.exit;\n\n        //LineGraph\n        let lineGraphData = [], typeOfValue = 'Entry';\n        if ( this.state.exitEnterValue === \"exit\") typeOfValue = 'Exit';\n        lineGraphData = _.chain(datum)\n            .groupBy(typeOfValue)\n            .filter(obj => obj[0][typeOfValue] === this.state.selectedCountry.value)\n            .map(objs => (\n                {\n                    \"ID\": _.uniqBy(objs, typeOfValue)[0][typeOfValue],\n                    \"data\": _.chain(objs)\n                                .groupBy('Year')\n                                .map(obj => ({\n                                    year: _.uniqBy(obj, 'Year')[0].Year,\n                                    value: _.sumBy(obj, 'Value')\n                                }))\n                                .value()\n                }\n            )).value();\n            \n        \n\n        if ( lineGraphData.length > 0 ) {\n            return (\n                <div className={classes.LineGraphContainer}>\n                    <ContainerLayout>\n                        <TextWrapper \n                            Heading={heading}\n                            Body={body}\n                            type=\"Line\"\n                        />\n                        <VizWrapper type=\"Line\">\n                            <LineGraph\n                                options={list}\n                                exitEnterValue={this.state.exitEnterValue}\n                                data={lineGraphData[0].data} \n                                // defaultValue={defaultValue}      \n                                selectorValue={this.state.selectedCountry}\n                                exitEntryHandler={this.exitEntryHandler}\n                                handler={this.handler}\n                                />\n                        </VizWrapper>\n                    </ContainerLayout>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default LineGraphContainer;\n","import React from 'react';\nimport { easeExpOut } from \"d3-ease\";\nimport { NodeGroup } from \"react-move\";\nimport { select, selectAll } from 'd3-selection';\n\nconst Arc = props => {\n    const { data, innerArcPath, outerArcPath, mid, radius } = props;\n    return (\n        <NodeGroup\n            data={data}\n            keyAccessor={d => d.index}\n            start={d => ({\n                startAngle: d.startAngle,\n                endAngle: d.startAngle\n            })}\n            enter={d => ({\n                endAngle: [d.endAngle],\n                timing: { duration: 500, delay: 350, ease: easeExpOut }\n            })}\n            update={d => ({\n                startAngle: [d.startAngle],\n                endAngle: [d.endAngle],\n                timing: { duration: 500, ease: easeExpOut }\n            })}\n        >\n            {nodes => {\n                let filteredNodes = [];\n                for( let node in nodes ){\n                    if(nodes[node].data.value > 0) {\n                        filteredNodes.push(nodes[node]);\n                    } \n                }\n                return (\n                    <g>\n                        {filteredNodes.map(({ key, data, state }) => {\n                            let p2Buffer = 0.05;\n                            let p1 = outerArcPath.centroid(state);\n                            let p2 = [ mid(state) ?\n                                p1[0] + radius * p2Buffer : \n                                p1[0] - radius * p2Buffer, \n                                p1[1]\n                            ];\n\n                            let text = data.props.NAME.split(\" \");\n                            return (\n                                    <g key={key}>\n                                        <path\n                                            className='arcs'\n                                            d={innerArcPath(state)}\n                                            // fill={data.props.COLOR}\n                                            opacity={0.9}\n                                            onMouseOver={\n                                                function() {\n                                                    props.onMouseOver(key)\n                                                    let selected = select(data)._groups[0][0].props.ID;\n                                                    selectAll('.arcs')\n                                                        .data(filteredNodes)\n                                                        .style(\"opacity\", d => {\n                                                            return d.data.props.ID === selected ? 1 : 0.2\n                                                            })\n                                                        }\n                                                }\n                                                onMouseOut={ \n                                                    function() {\n                                                        props.onMouseOut(key)\n                                                        selectAll('.arcs')\n                                                            .data(nodes)\n                                                            .style('opacity', 1);\n                                                }\n                                            }\n                                            data-tip={`${data.props.ID}|${data.props.NAME}|${data.value}`} \n                                            data-for=\"ChordArc\" \n                                            /> \n                                        <text\n                                            fontSize=\"5px\"\n                                            fill=\"#000\"\n                                            transform={`translate(${p2.toString()})`}\n                                            textAnchor={mid(state) ? \"start\" : \"end\"}\n                                        >   \n                                            <tspan x={mid(state) ? \"1px\" : \"-1px\"} dy=\"0em\">{text[0]} {text[1]}</tspan>\n                                            <tspan x={mid(state) ? \"1px\" : \"-1px\"} dy=\"1em\">{text[2]} {text[3]} {text[4]}</tspan>\n                                        </text>\n                                        <polyline\n                                            fill=\"none\"\n                                            stroke=\"rgba(0,0,0,0.4)\"\n                                            strokeWidth=\"0.5\"\n                                            points={`${innerArcPath.centroid(state)},\n                                                ${p1},${p2.toString()}`}\n                                        /> \n                                    </g>\n                            );\n                        })}\n                    </g>\n                );\n            }}\n            </NodeGroup>\n    );\n}\n\nexport default Arc;","import React, { useState } from 'react';\nimport { easeExpOut } from \"d3-ease\";\nimport { NodeGroup } from \"react-move\";\n\nconst Ribbon = ({data, ribbon, meta, arcIndex, innerRadius }) => {\n\n    const [mouseOver, mouseOverHandler] = useState({ selected: false, selectedIndex: null });\n    //Define defs\n    // let defs = createLinearGradient(data, innerRadius, meta);\n    return (\n        <NodeGroup\n            data={data}\n            keyAccessor={(d, i) => i}\n            start={d => ({\n                source: {\n                startAngle: [d.source.startAngle],\n                endAngle: [d.source.endAngle]\n                },\n                target: {\n                startAngle: [d.target.startAngle],\n                endAngle: [d.target.endAngle]\n                }\n            })}\n            enter={d =>({\n                source: {\n                    endAngle: [d.source.endAngle]\n                },\n                target: {\n                    endAngle: [d.target.endAngle]\n                },\n                timing: { duration: 500, ease: easeExpOut }\n                })\n            }\n            update={d => ({\n                source: {\n                    startAngle: [d.source.startAngle],\n                    endAngle: [d.source.endAngle]\n                },\n                target: {\n                    startAngle: [d.target.startAngle],\n                    endAngle: [d.target.endAngle]\n                },\n                timing: { duration: 500, ease: easeExpOut }\n            })}\n        >\n            \n            {nodes => {\n                return (\n                    <g id=\"ribbons\">\n                        {/* {defs} */}\n                        {nodes.map(({ key, data, state }) => {\n                            return (\n                                data.value === 0 ? null : <path \n                                    id='ribbons'\n                                    key={key} \n                                    data-tip={\n                                        `\n                                        ${meta[data.source.index].props.NAME}|\n                                        ${meta[data.source.subindex].props.NAME}|\n                                        ${data.source.index + 1}|\n                                        ${data.source.subindex + 1}|\n                                        ${data.source.value}|\n                                        ${data.target.value}`\n                                    } \n                                    data-for=\"ChordRibbon\"\n                                    d={ribbon(state)}\n                                    onMouseOver={() => mouseOverHandler(prevState =>({\n                                        ...prevState, selected: true, selectedIndex: key\n                                    }))}\n                                    onMouseOut={() => mouseOverHandler(prevState => ({\n                                        ...prevState, selected: false, selectedIndex: null\n                                    }))} \n                                    fill={\"black\"} \n                                    // fill={`url(#Ribbon-${data.source.index}-${data.target.index})`} \n                                    opacity={ \n                                        (mouseOver.selected === true && mouseOver.selectedIndex !== null && mouseOver.selectedIndex === key) || \n                                        ( (parseInt(arcIndex) === data.source.index) || (parseInt(arcIndex) === data.source.subindex) ) ? 1 : .2} \n                                />\n                            );\n                        })}\n                    </g>\n                );\n            }}\n        </NodeGroup>\n    );\n}\n\nconst createLinearGradient = (data, innerRadius, meta) => {\n    return (\n        <defs>\n            {data.map((ribbon, i) => {\n\n                let fillIndex = {\n                    source: ribbon.source.index, \n                    target: ribbon.target.index\n                };\n\n                return (\n                    <Gradient\n                        key={i}\n                        ribbon={ribbon}\n                        innerRadius={innerRadius}\n                        // fill={[meta[fillIndex.source].color, meta[fillIndex.target].color]}\n                    />\n                )\n            })}\n        </defs>\n    )\n}\n\nconst Gradient = ( {ribbon, innerRadius, fill} ) => {\n\n    let t = ribbon.target, s = ribbon.source;\n    let x1 = innerRadius * Math.cos((s.endAngle - s.startAngle)/2 + s.startAngle-Math.PI/2),\n        y1 = innerRadius * Math.sin((s.endAngle - s.startAngle)/2 + s.startAngle-Math.PI/2),\n        x2 = innerRadius * Math.cos((t.endAngle - t.startAngle)/2 + t.startAngle-Math.PI/2),\n        y2 = innerRadius * Math.sin((t.endAngle - t.startAngle)/2 + t.startAngle-Math.PI/2);\n\n    return (\n        <linearGradient \n            id={`Ribbon-${ribbon.source.index}-${ribbon.target.index}`}\n            gradientUnits={\"userSpaceOnUse\"}\n            x1={x1}\n            y1={y1}\n            x2={x2}\n            y2={y2}\n        >\n            <stop offset=\"0%\" stopColor={fill[0]} />\n            <stop offset=\"100%\" stopColor={fill[1]} />\n        </linearGradient>\n    )\n}\n\nexport default Ribbon;\n\n","import React from 'react';\nimport _ from 'lodash';\nimport { chord, ribbon } from 'd3-chord';\nimport { arc } from 'd3-shape';\nimport { descending } from 'd3-array';\nimport ReactTooltip from 'react-tooltip';\nimport Arc from './ChordComponents/Arc';\nimport classes from './ChordDiagram.module.css';\nimport Ribbon from './ChordComponents/Ribbon';\n\nclass ChordDiagram extends React.Component {\n    state = {\n        arcIndex: false,\n        arcHovered: undefined,\n    }\n    componentDidUpdate() {\n        ReactTooltip.rebuild();\n    }\n\n    arcTooltip = dataTip => {\n        if (!dataTip) return \"\";\n        const [id, name, description] = dataTip.split(\"|\");\n        let value = parseFloat(description)\n            .toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n        return description ? (\n            <p>Financing for<span><br/>{id}. {name}</span><br/>\n                Value : {value}M USD</p>\n        ) : null;\n    };\n    \n    ribbonTooltip = dataTip => {\n        if (!dataTip) return \"\";\n        const [indexName, subindexName, index, subindex, entryValue, exitValue] = dataTip.split(\"|\");\n        // let value = parseFloat(entryValue).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n        \n        // let result = (\n        //     <p>Financing for<br/><span>{index}. {indexName} &amp; <br/>{subindex}. {subindexName}{}</span><br/>\n        //     Value : {value}M USD</p>\n        // );\n        // if ( index === subindex ) {\n        //     result = (\n        //         <p>Financing for<br/><span>{index}.{indexName}</span><br/>\n        //         Value : {value}M USD</p>\n        //     );\n        // }\n\n        let result = (<p>{indexName} : {entryValue} <br/> {subindexName}: {exitValue}</p>)\n    \n        return indexName ? result : null;\n    }\n\n    render() {\n        const { data, from, to} = this.props;\n        let dataLength = 43, fuelData =[];\n        const view = [500, 500]; \n        const trbl = [10, 10, 10, 10]; \n        const dims = [ view[0] - trbl[1] - trbl[3], view[1] - trbl[0] - trbl[2] ];\n        const radius = (dims[1] / 2) * 0.6;\n        const innerRadius = 130, outerRadius = 135;\n        const dataFilteredByYear = data.filter(d => d.Year >= from && d.Year <= to);\n\n        function mid(d) {\n            return Math.PI > (d.endAngle + d.startAngle) / 2 \n        }\n          \n        const innerArcPath = arc()\n          .innerRadius(innerRadius)\n          .outerRadius(outerRadius);\n        \n        const outerArcPath = arc()\n          .innerRadius(radius * 1.02)\n          .outerRadius(radius * 1.02);\n        \n        let concatData = _.chain(dataFilteredByYear)\n            .groupBy('Pos')\n            .map(objs => (\n                {\n                    'ID': _.uniqBy(objs, 'Pos')[0].Pos - 1,\n                    'Value': _.sumBy(objs, o => o.Value),\n                }\n            )).value();\n        \n        for(let i = 0; i < dataLength; i++) {\n            fuelData[i] = {\n                index: i + 1,\n                data: [],\n            };\n        }\n\n        for(let i = 0; i < dataLength; i++) {\n            for(let j = 0; j < dataLength; j++) {\n                concatData.forEach(el => {\n                    if (43 * i + j === el.ID){\n                        fuelData[i].data[j] = el.Value\n                        // fuelData[j].data[i] = el.Value\n                    } \n                })\n            }\n        }\n\n        let datas = _.chain(fuelData)\n\t\t\t.map(u => u.dataFilteredByYear)\n\t\t\t.flatten()\n\t\t\t.sum()\n            .value();\n        const chords = chord().padAngle(0.005).sortSubgroups(descending);\n        const ribbons = ribbon().radius(125);\n        const matrix = fuelData.map(d => d.data);\n        const chordData = chords(matrix);\n        chordData['groups'] = chordData.groups.map((d,i) => {\n            return {\n                props: {\n                    ID: dataFilteredByYear[i].ID,\n                    NAME: dataFilteredByYear[i].Entry,\n                    // COLOR: sdgProp[i].color,\n                },\n                ...d\n            }\n        })\n\n        // let metaProps = _.chain(dataFilteredByYear)\n        //     .groupBy('Entry')\n        //     .map(objs => ({\n        //         \"ID\": \n        //     }))\n        //     .value()\n\n        //     console.log(metaProps);\n      \n        let renderArc, renderRibbon = null;\n        if ( datas !== 0 ) {\n            renderArc = (\n                <Arc \n                    data={chordData.groups}\n                    innerArcPath={innerArcPath}\n                    outerArcPath={outerArcPath}\n                    onMouseOver={e => this.setState({ arcHovered: true, arcIndex: e })}\n                    onMouseOut={e => this.setState({ arcHovered: false, arcIndex: undefined})}\n                    mid={mid}\n                    radius={radius}\n                />\n            );\n            renderRibbon = (\n                <Ribbon \n                    data={[...chordData]}\n                    ribbon={ribbons}\n                    meta={chordData.groups}\n                    arcIndex={this.state.arcIndex}\n                    arcHovered={this.state.arcHovered}\n                    innerRadius={125}\n                />\n            );\n        }\n        return (\n            <div className={classes.ChordDiagram}>\n                <svg width=\"100%\" height=\"100%\" viewBox={`0 0 400 400`}>\n                    <g transform={`translate(${400 / 2}, ${400 / 2})`}>\n                        {renderArc}\n                        {renderRibbon}\n                    </g>\n                </svg>\n                <ReactTooltip id=\"ChordArc\" className=\"Tooltip\" getContent={d => this.arcTooltip(d)} />\n                <ReactTooltip id=\"ChordRibbon\" className=\"Tooltip\" getContent={d => this.ribbonTooltip(d)} />\n            </div>\n        )\n    }\n}\n\nexport default ChordDiagram;","import React from 'react';\nimport classes from './SliderComponents.module.css';\n\nexport const Handle = ( {handle: { id, value, percent }, getHandleProps }) => {\n    return (\n      <div\n        className={classes.Handle}\n        style={{ left: `${percent}%` }}\n        {...getHandleProps(id)} >\n        {/* <div style={{ fontFamily: 'Roboto', fontSize: 11, marginTop: -35 }}>\n          {value}\n        </div> */}\n      </div>\n    )\n}\n\nexport const Track = ({ source, target, getTrackProps }) => {\n    return (\n        <div\n          className={classes.Track}\n          style={{\n              left: `${source.percent}%`,\n              width: `${target.percent - source.percent}%`,\n          }}\n          {...getTrackProps()} \n          />\n    )\n}\n\n  export const Tick = ({ tick, count }) => { \n    return (\n        <div>\n          <div className={classes.Ticks}\n            style={{ left: `${tick.percent}%`, }} />\n          <div className={classes.TicksLabel}\n            style={{\n              marginLeft: `${-(100 / count) / 2}%`,\n              width: `${100 / count}%`,\n              left: `${tick.percent}%`,\n              }} >\n            {tick.value}\n        </div>\n        </div>\n    )\n} ","import React from 'react';\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\nimport { Handle, Track, Tick } from './SliderComponents/SliderComponents';\nimport classes from './TimeSlider.module.css';\n  \nconst timeSlider = ( props ) => {\n    \n    const sliderStyle = {  \n        position: 'relative',\n        width: props.width,\n        height: props.height,\n        marginBottom: props.margin\n    }\n\n    return (\n        <Slider\n            rootStyle={sliderStyle}\n            domain={[2009, 2019]}\n            step={1}\n            mode={1}\n            onChange={props.pushParams}\n            values={[props.from, props.to]} >\n            <Rail>\n            {({ getRailProps }) => ( \n                <div className={classes.RailStyle} {...getRailProps()} /> \n            )}\n            </Rail>\n            <Handles>\n                {({ handles, getHandleProps }) => (\n                    <div>\n                        {handles.map(handle => (\n                            <Handle\n                            key={handle.id}\n                            handle={handle}\n                            getHandleProps={getHandleProps}\n                            />\n                        ))}\n                    </div>\n                )}\n            </Handles>\n            <Tracks right={false} left={false}>\n                {({ tracks, getTrackProps }) => (\n                    <div>\n                    {tracks.map(({ id, source, target }) => (\n                        <Track\n                            key={id}\n                            source={source}\n                            target={target}\n                            getTrackProps={getTrackProps} />\n                    ))}\n                    </div>\n                )}\n            </Tracks>\n            <Ticks count={11}>\n                {({ ticks }) => (\n                    <div>\n                    {ticks.map(tick => (\n                        <Tick key={tick.id} tick={tick} count={ticks.length} />\n                    ))}\n                    </div>\n                )}\n            </Ticks>  \n        </Slider>   \n    );\n};\n\nexport default timeSlider;","import React from 'react';\nimport axios from 'axios';\nimport ChordDiagram from '../../Components/Visualisations/ChordDiagram/ChordDiagram';\nimport ContainerLayout from '../../hoc/ContainerLayout/ContainerLayout';\nimport TimeSlider from '../../Components/TimeSlider/TimeSlider';\nimport TextWrapper from '../../Components/TextWrapper/TextWrapper';\nimport VizWrapper from '../../Components/Visualisations/VizWrapper/VizWrapper'\n\nclass ChordContainer extends React.Component {\n\n    state = {\n        data: [],\n        from: 2019,\n        to: 2019\n    }\n\n    // componentDidMount() {\n    //     this.initialLoad()\n    // }\n\n    // initialLoad = () => {\n    //     axios.get('/json/test.json')\n    //         .then(res => {\n    //             this.setState({\n    //                 data: res.data\n    //             })\n    //         })\n    // }\n\n    sliderChange = e => {\n        this.setState({\n            from: e[0],\n            to: e[1]\n        })\n    }    \n\n    render(){\n\n        const { data } = this.props, { from, to } = this.state;\n        let chordDiagram = null;\n        if ( this.props.data.length !== 0 ) {\n            chordDiagram = (\n                <ChordDiagram\n                    data={data}\n                    from={from}\n                    to={to}                \n                />\n                );\n        }\n\n        return (\n            <ContainerLayout>\n                <VizWrapper type=\"Chord\">\n                    <div>\n                        {chordDiagram}\n                        <TimeSlider \n                            from={from} \n                            to={to}  \n                            width={\"100%\"}\n                            height={30}\n                            margin={16}\n                            pushParams={this.sliderChange}\n                        />\n                    </div>\n                </VizWrapper>\n            </ContainerLayout>\n        )\n        \n    }\n}\n\nexport default ChordContainer;","import React from 'react';\nimport classes from './Layout.module.css';\n\nconst layout = props => (\n    <div className={classes.Layout}>\n        {props.children}\n    </div>\n);\n\nexport default layout;","import React from 'react';\nimport LineGraphContainer from './Containers/LineGraphContainer/LineGraphContainer';\nimport ChordContainer from './Containers/ChordContainer/ChordContainer';\nimport Layout from './hoc/Layout/Layout';\nimport datas from '../src/Data/data'\nimport './App.css';\n\nclass App extends React.Component {\n\tstate = {\n\t\tresult: datas\n\t}\n\t// componentDidMount() {\n\t// \tthis.initialLoad();\n\t// }\n\t// initialLoad = () => {\n    //     Axios.get('/json/test.json')\n    //         .then(res => {\n    //             this.setState({\n    //                 result: res.data\n    //             })\n    //         })\n\t// }\n\trender() {\n\t\tconst { result } = this.state;\n\t\t\n\t\tlet data = [...result];\n\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<LineGraphContainer data={data} />\n\t\t\t\t<ChordContainer data={data}/>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Track\":\"SliderComponents_Track__1AiHl\",\"Handle\":\"SliderComponents_Handle__360lX\",\"Ticks\":\"SliderComponents_Ticks__1rMqq\",\"TicksLabel\":\"SliderComponents_TicksLabel__q9F_C\"};"],"sourceRoot":""}